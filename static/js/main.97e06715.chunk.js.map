{"version":3,"sources":["index.js"],"names":["initialState","count","reducer","state","action","type","Error","Counter","useReducer","dispatch","onClick","rootElement","document","getElementById","ReactDOM","render"],"mappings":"gMAGMA,EAAe,CAAEC,MAAO,GAE9B,SAASC,EAAQC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,YACH,MAAO,CAAEJ,MAAOE,EAAMF,MAAQ,GAChC,IAAK,YACH,MAAO,CAAEA,MAAOE,EAAMF,MAAQ,GAChC,QACE,MAAM,IAAIK,MAEhB,CAEA,SAASC,IACP,MAA0BC,qBAAWN,EAASF,GAAa,mBAApDG,EAAK,KAAEM,EAAQ,KACtB,OACE,+CACUN,EAAMF,MACd,wBAAQS,QAAS,kBAAMD,EAAS,CAAEJ,KAAM,aAAc,EAAC,eACvD,wBAAQK,QAAS,kBAAMD,EAAS,CAAEJ,KAAM,aAAc,EAAC,iBAG7D,CAEA,IAAMM,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAACR,EAAO,IAAKI,E","file":"static/js/main.97e06715.chunk.js","sourcesContent":["import React, { useReducer } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst initialState = { count: 0 };\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"increment\":\n      return { count: state.count + 1 };\n    case \"decrement\":\n      return { count: state.count - 1 };\n    default:\n      throw new Error();\n  }\n}\n\nfunction Counter() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <>\n      Count: {state.count}\n      <button onClick={() => dispatch({ type: \"increment\" })}>+</button>\n      <button onClick={() => dispatch({ type: \"decrement\" })}>-</button>\n    </>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Counter />, rootElement);\n"],"sourceRoot":""}